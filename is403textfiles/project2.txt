AquaTrack - Project Plan & Documentation

Group Members: John Everett, Cole Latour, Sarah Peck, Chase Fisher
Project: An AWS-hosted web platform to track and share information about global well projects, allowing users to find and follow projects of interest.

1. Division of Duties

To ensure all parts of the project are covered efficiently, the work will be divided as follows:

John Everett (Cloud Architect / Backend Lead):

Set up and configure all required AWS services (Cognito, DynamoDB, S3 for images if needed).

Manage IAM roles and permissions.

Implement all backend logic in app.js for connecting to Cognito (authentication) and DynamoDB (database operations).

Write the core CRUD (Create, Read, Update, Delete) functions for the database.

Cole Latour (Frontend / Map Integration):

Structure the main index.html file and manage all page sections.

Implement the Leaflet interactive map.

Ensure the map correctly fetches and displays project location data from the database.

Handle all frontend navigation and page switching logic in app.js.

Sarah Peck (UI/UX Design / CSS Lead):

Responsible for the overall look and feel of the website, focusing on a professional, humanitarian aesthetic.

Manage the style.css file, including the hero image, color palette, and typography.

Ensure the website is fully responsive and looks good on mobile devices.

Create the static HTML for the project detail, dashboard, and modal views.

Chase Fisher (Database / Admin & QA):

Design the DynamoDB table schemas (well_projects, saved_projects).

Implement the admin-only functionality (Add, Edit, Delete projects).

Implement the user dashboard functionality (saving/viewing projects).

Lead testing and quality assurance (QA) to find and log bugs.

2. Schedule of Duty Completion

This is a 4-week project schedule, with milestones at the end of each week.

Week 1 (Oct 29 - Nov 5): AWS Setup & Frontend Shell

John: AWS Cognito User Pool and Identity Pool are created. DynamoDB tables are provisioned.

Sarah/Cole: index.html (Landing Page, Login Page) and style.css are complete (non-functional).

Chase: Database ERD/Schema is finalized.

All: Project plan (this document) submitted.

Week 2 (Nov 6 - Nov 12): Core Functionality - Auth & Map

John: User registration and login (Cognito) are fully functional in app.js.

Cole: Leaflet map is initialized and displaying on the map page.

Chase: Admin modal is built; addDoc (Create) functionality is working.

Sarah: CSS for map page and modals is complete.

Week 3 (Nov 13 - Nov 19): Full CRUD & User Features

John/Chase: Full admin CRUD (Read, Update, Delete) for projects is complete and secured to admin users.

Cole: Map now successfully reads and displays all projects from DynamoDB.

Sarah: project-detail page is designed and populates with dynamic data.

Chase: User "Save Project" and "Dashboard" functionality is implemented.

Week 4 (Nov 20 - Nov 26): Finalization & Testing

Sarah: Final UI/UX polish and responsive design review.

Chase: Full site QA and bug testing.

Cole: Fix all outstanding navigation and map bugs.

John: Finalize AWS permissions and prepare for deployment.

All: Final project submission.

3. Database Layout (ERD)

Since we are using AWS services, our "database" is a combination of Cognito (for users) and DynamoDB (for data), which is a NoSQL database.

Amazon Cognito User Pool: This acts as our security table. It securely stores all user information, including:

userId (Primary Key, generated by Cognito)

email

name

password (securely hashed and salted)

DynamoDB Tables:

well_projects: Stores all information for each well.

id (Partition Key, String, UUID)

title (String)

description (String)

lat (Number)

lng (Number)

image (String - URL)

status (String - e.g., "Funding", "In Progress", "Complete")

contribution (String - Info on how to help)

saved_projects: A many-to-many link table for users and projects.

userId (Partition Key, String - links to Cognito userId)

projectId (Sort Key, String - links to well_projects.id)

(See Database_ERD.png for a visual representation).

4. List of Views

Our project is a Single Page Application (SPA). All "views" are <section> elements within the single index.html file, which are shown or hidden by JavaScript.

home (ID): The main landing page.

map-page (ID): The view containing the Leaflet interactive map.

project-detail (ID): A dynamic view that will be populated with a specific project's info.

login (ID): The user login form.

register (ID): The new user registration form.

dashboard (ID): The logged-in user's personal dashboard to view their saved projects.

project-modal (ID): The popup modal form for admins to add/edit projects.