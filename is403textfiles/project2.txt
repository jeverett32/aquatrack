AquaTrack - Project Plan & Documentation

Group Members: John Everett, Cole Latour, Sarah Peck, Chase Fisher
Project: An AWS-hosted web platform to track and share information about global well projects, allowing users to find and follow projects of interest.

1. Division of Duties

To ensure all parts of the project are covered efficiently, the work will be divided as follows:

John Everett (Backend & Cloud Lead):

    Set up and configure all required AWS services (Cognito, DynamoDB).

    Manage IAM roles and permissions.

    Implement all backend logic in server.js for API routes, database connections, and authentication.

    Write the core server-side CRUD functions (Create, Read, Update, Delete) that the frontend will call.

Cole Latour (Frontend Lead - Public):

    Structure the main index.ejs file and manage all public-facing page sections (Homepage, Map Page, Project Detail).

    Implement the Leaflet interactive map and its data fetching logic.

    Handle all primary client-side navigation (page switching) in app.js.

    Responsible for the style.css and responsiveness of the main site components (Header, Footer, Homepage, Map Page).

Sarah Peck (Frontend Developer - User Features):

    Implement the client-side logic for all user-specific features in app.js.

    Build the functionality for the Login and Register forms (calling John's backend auth).

    Implement the full client-side logic for the User Dashboard (saving, unsaving, and viewing projects).

    Responsible for the style.css and responsiveness of the components she builds (Login/Register forms, Dashboard, and Admin Modal).

Chase Fisher (Database & QA Lead):

    Design and document the DynamoDB table schemas (well_projects, saved_projects, etc.).

    Implement the client-side logic for the admin-only features (Add, Edit, Delete project buttons) that call John's backend functions.

    Lead testing and quality assurance (QA) for the entire application, finding and logging bugs.

2. Schedule of Duty Completion

Due Date: December 10th

Week 1 (Oct 29 - Nov 4): Planning, AWS Setup & Frontend Shell

    John: AWS Cognito User Pool and Identity Pool are created. DynamoDB tables are provisioned. server.js is set up to serve the basic EJS page.

    Cole: The main views/index.ejs file is structured. The public/style.css file is created with the core humanitarian theme (colors, fonts). The static Homepage layout is complete (non-functional).

    Chase: Database ERD/Schema is finalized and documented.

    Sarah: The static HTML/CSS for the Login, Register, and Admin Modal components (within index.ejs) is complete and styled.

    All: Project plan submitted.

Week 2 (Nov 5 - Nov 11): Core Auth & Map UI

    John: Backend API routes for user registration and login (Cognito) are created in server.js and tested.

    Sarah: Client-side logic in public/app.js for the Login and Register forms is implemented and successfully calls John's backend auth routes.

    Cole: Leaflet map is initialized and displaying on the map page (static, no data yet).

Week 3 (Nov 12 - Nov 18): Core Read & Create Functionality

    John: Backend API routes for "Create Project" (admin) and "Read All Projects" (public) are complete.

    Cole: Map now successfully reads and displays all projects from John's "Read" API route.

    Chase: Admin modal is functional; client-side logic for the "Add Project" button is implemented (calling John's "Create" route).

Week 4 (Nov 19 - Nov 25): Full CRUD & User Dashboard

    John: Backend API routes for "Update" & "Delete" (admin) are complete and secured.

    Sarah: Client-side logic for the User Dashboard (Save Project, Unsave Project, View Saved Projects) is fully implemented.

    Chase: Client-side logic for "Edit" and "Delete" buttons is implemented and secured to admin users.

Week 5 (Nov 26 - Dec 2): Feature Polish & Initial Testing

    Cole: project-detail page section is built and now populates with dynamic data when a map pin is clicked.

    Sarah: Final UI/UX polish and responsive design review for all user components (Login, Dashboard, Modals).

    Chase: Begin full site QA and bug testing. Log all issues for the team.

Week 6 (Dec 3 - Dec 9): Final Testing, Deployment & Submission

    Cole: Final UI/UX polish for public components (Homepage, Map). Fix all outstanding bugs identified by Chase.

    John: Finalize all AWS IAM permissions and deploy the full application.

    Chase: Confirm all bugs are resolved and functionality meets requirements.

    All: Record demo video and submit the final project by Dec 10th.

3. List of Views

Our project is a Single Page Application (SPA). All "views" are <section> elements within the single index.html file, which are shown or hidden by JavaScript.

home (ID): The main landing page.

map-page (ID): The view containing the Leaflet interactive map.

project-detail (ID): A dynamic view that will be populated with a specific project's info.

login (ID): The user login form.

register (ID): The new user registration form.

dashboard (ID): The logged-in user's personal dashboard to view their saved projects.

project-modal (ID): The popup modal form for admins to add/edit projects.